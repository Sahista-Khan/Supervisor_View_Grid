{"version":3,"sources":["Component/Header/Header.js","Component/PaginationComponent/PaginationComponent.js","Component/Pagination/PaginationHeader.js","assets/icon/subtask_icon.PNG","Component/Table/TableRow.js","assets/icon/setting_icon.PNG","assets/icon/sorting.PNG","assets/icon/sortingactive.PNG","Component/TableHeader/TableHeader.js","Component/Table/Table.js","Container/DataTable/Data.js","Container/DataTable/DataTable.js","App.js","reportWebVitals.js","index.js"],"names":["Header","PaginationComponent","totalItems","currentPage","itemPerPage","onPageChange","onArrowChange","useState","totalPages","setTotalPages","useEffect","Math","ceil","pagesItem","useMemo","paginationItem","i","console","log","push","Item","active","onClick","First","Prev","Next","Last","PaginationHeader","props","this","className","Form","Check","type","id","checked","onChange","e","preventDefault","ondropdownChange","target","value","onInputChange","Component","TableRow","data","lobcolor","style","width","taskName","background","lob","toUpperCase","subtask","src","subTaskIcon","alt","step","duecolor","duewidth","dueDate","dueTime","TableHeader","settingIcon","sortingIcon","sortingActive","Table","itemsPerPage","allrow","length","duedateColor","isChecked","assignTo","DataTable","onDataChange","state","setState","change","lastindex","item","current","currpage","itemperpage","startindex","endIndex","sliceData","slice","dataToShow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59144f63.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n function Header() {\r\n    return (\r\n        <div>         \r\n            Supervisor View Grid\r\n            <hr/>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect,useMemo } from 'react'\r\nimport './PaginationComponent.css'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\n\r\nfunction PaginationComponent({ totalItems, currentPage, itemPerPage,onPageChange,onArrowChange }) {\r\n\r\n\r\n    const [totalPages, setTotalPages] = useState(1)\r\n\r\n    useEffect(() => {\r\n        if (totalItems > 0 && itemPerPage > 0) {\r\n            setTotalPages(Math.ceil(totalItems / itemPerPage))\r\n        }\r\n    }, [totalItems, itemPerPage])\r\n\r\n  \r\n\r\n   const pagesItem= useMemo(() =>{\r\n    let paginationItem = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n     console.log(\"i am inside\")\r\n        console.log(currentPage)\r\n        paginationItem.push(<Pagination.Item key ={i} active={i==currentPage} onClick={()=>{onPageChange(i)}}>\r\n            {i}</Pagination.Item>)\r\n\r\n    }\r\n     return paginationItem\r\n   } ,[totalPages,currentPage])\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <Pagination>\r\n                <Pagination.First onClick={()=>onArrowChange(\"first\")}/>\r\n                <Pagination.Prev onClick={()=>onArrowChange(\"prev\")}/>\r\n                {pagesItem}\r\n                <Pagination.Next onClick={()=>onArrowChange(\"next\")}/>\r\n                <Pagination.Last onClick={()=>onArrowChange(\"last\")} />\r\n            </Pagination>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginationComponent\r\n","import React, { Component } from 'react'\r\nimport './Pagination.css'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport PaginationComponent from '../PaginationComponent/PaginationComponent'\r\n\r\nclass PaginationHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n    }\r\n    \r\n    // constructor(props) {\r\n    //     super(props)\r\n    \r\n    //     this.state = {\r\n    //          totalItems:50,\r\n    //          currentPage:1,\r\n            \r\n    //     }\r\n    //    this.itemPerPage=5;\r\n       \r\n    // }\r\n    // onPageChange=(i)=>{\r\n    //        this.setState({\r\n    //           currentPage:i    \r\n    //        })\r\n    // }\r\n\r\n    // onArrowChange=(change)=>{\r\n    //     if(change==\"first\"){\r\n    //         this.setState({currentPage:1 })\r\n    //     }\r\n    //     if(change==\"prev\"){\r\n    //         this.setState({currentPage:this.state.currentPage-1 })\r\n    //     }\r\n    //     if(change==\"next\"){\r\n    //         this.setState({currentPage:this.state.currentPage+1 })\r\n    //     }\r\n    //     if(change==\"last\"){\r\n    //         this.setState({currentPage:Math.ceil(this.state.totalItems / this.itemPerPage) })\r\n    //     }\r\n        \r\n        \r\n    // }\r\n\r\n    render() {\r\n        console.log(\"-----------------------------\")\r\n        console.log(this.props.totalItems)\r\n       let totalPages= Math.ceil(this.props.totalItems / this.props.itemPerPage)\r\n        return (\r\n            <div className=\"paging\">\r\n                <div>\r\n                    <Form>\r\n                        <Form.Check\r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            checked\r\n                        />\r\n                        Multi sort\r\n                    </Form>\r\n                    \r\n                </div>\r\n                <div className=\"clearFilters\"><span>x</span> <span>Clear all filters</span></div>\r\n        <div>Results 1 to 5 of {this.props.totalItems}</div>\r\n                <div className=\"itemPerPage\">Items per page<select onChange={(e)=>{e.preventDefault();this.props.ondropdownChange(e.target.value)}}><option value=\"5\">5</option>\r\n                <option value=\"10\">10</option><option value=\"20\">20</option></select></div>\r\n                <div>\r\n              <PaginationComponent totalItems={this.props.totalItems}\r\n                    currentPage={this.props.currentPage}\r\n                    itemPerPage={this.props.itemPerPage}\r\n                    onPageChange={this.props.onPageChange}\r\n                    onArrowChange={this.props.onArrowChange}\r\n               />\r\n\r\n                </div>\r\n                <div className=\"goToPage\">Go To Page<input type=\"text\" \r\n                 onChange={(e)=>{this.props.onInputChange(e.target.value)}}>\r\n                    </input>of {totalPages} </div>\r\n                <span className=\"\">Go {'>'}</span>\r\n            </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default PaginationHeader\r\n","export default __webpack_public_path__ + \"static/media/subtask_icon.d4f42b15.PNG\";","import React from 'react'\r\nimport './TableRow.css'\r\nimport subTaskIcon from '../../assets/icon/subtask_icon.PNG'\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nfunction TableRow({ data, lobcolor }) {\r\n    console.log(data)\r\n    return (\r\n\r\n        <tr className=\"tableRow\">\r\n            <td style={{ width: 55 }}></td>\r\n            <td><input type=\"checkbox\" /></td>\r\n            <td className=\"taskNameTD\">{data.taskName}</td>\r\n            <td className=\"lobTD\"><p style={{ background: data.lobcolor }}>{data.lob.toUpperCase()}</p></td>\r\n\r\n            <td className=\"subTask\">{data.subtask ? <> <img src={subTaskIcon} alt=\"\" />{data.subtask}</> : \"\"}</td>\r\n            <td><select className=\"selectDropdown\" ><option>Unassigned</option></select></td>\r\n            <td className=\"step\">{data.step}</td>\r\n            <td className=\"dateTime\"><p ><span style={{ background: data.duecolor, width: data.duewidth }}></span>\r\n                {data.dueDate ? <span>{data.dueDate} @{data.dueTime}</span> : <span>No due date</span>}\r\n            </p></td>\r\n        </tr>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default TableRow\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/setting_icon.1adc5ac3.PNG\";","export default __webpack_public_path__ + \"static/media/sorting.b55983e9.PNG\";","export default __webpack_public_path__ + \"static/media/sortingactive.85cb43dd.PNG\";","import React, { Component } from 'react'\r\nimport './TableHeader.css'\r\nimport settingIcon from '../../assets/icon/setting_icon.PNG'\r\nimport sortingIcon from '../../assets/icon/sorting.PNG'\r\nimport sortingActive from '../../assets/icon/sortingactive.PNG'\r\n\r\nexport class TableHeader extends Component {\r\n    render() {\r\n        return (\r\n                \r\n                <tr className=\"thHeader\">\r\n                    <th><img src={settingIcon} alt=\"\"/></th> \r\n                    <th><input type=\"checkbox\" /></th>\r\n                    <th>Task Name <img src={sortingIcon} alt=\"\"/></th>\r\n                    <th>LOB <img src={sortingIcon} alt=\"\"/></th>\r\n                    <th>SUBTASKS <img src={sortingIcon} alt=\"\"/></th>\r\n                    <th>ASSIGNED TO <img src={sortingIcon} alt=\"\"/></th>\r\n                    <th>STEP <img src={sortingIcon} alt=\"\"/></th>\r\n                    <th>DUE DATE <img src={sortingActive} alt=\"\"/></th>\r\n                    \r\n                </tr>\r\n\r\n           \r\n            \r\n           \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableHeader\r\n","import React from 'react'\r\nimport TableRow from './TableRow';\r\nimport TableHeader from '../TableHeader/TableHeader'\r\n\r\nexport default function Table({itemsPerPage, data}) {\r\n    let allrow=[]\r\n    \r\n   \r\n    for(let i=0;i<itemsPerPage && i<data.length ;i++){\r\n         allrow.push(<TableRow data={data[i]} \r\n         duedateColor=\"rgba(244, 175, 100, 0.5);\" ></TableRow>   )\r\n       \r\n    }\r\n    return (\r\n\r\n        <table className=\"tableTR\">\r\n            <tbody>\r\n                <TableHeader/>\r\n              {allrow}\r\n                {/* <TableRow lobname=\"MEDICARE\" lobcolor=\"purple\"\r\n                    duedate=\"09/04/2020 @ 9:00 AM\" duedateColor=\"rgba(244, 175, 100, 0.5);\" /> */}\r\n\r\n                {/* <TableRow lobname=\"COMMERCIAL\" lobcolor=\"#707683\"\r\n                    duedate=\"09/09/2020 @ 5:00 PM\" duedateColor=\"rgba(244, 175, 100, 0.5);\" />\r\n\r\n                <TableRow lobname=\"EXCHANGE\" lobcolor=\"#F4AF64\"\r\n                    duedate=\"09/18/2020 @ 10:30 AM\" duedateColor=\"rgba(244, 175, 100, 0.5);\" />\r\n\r\n                <TableRow lobname=\"MEDICAID\" lobcolor=\"#F89090\"\r\n                    duedate=\"No due date\" duedateColor=\"rgba(244, 175, 100, 0.5);\" /> */}\r\n\r\n            </tbody>\r\n        </table>\r\n\r\n    )\r\n}\r\n","export let data=[\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task Name\",\r\n        lob:\"Medicare\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"09/04/2020\",\r\n        dueTime:\"9:00 AM\",\r\n        lobcolor:\"purple\",\r\n        duecolor:\"rgba(244, 175, 100, 0.5)\",\r\n        duewidth:\"90%\"\r\n    \r\n    },\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task Name\",\r\n        lob:\"Commercial\",\r\n        subtask:\"3\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"09/09/2020\",\r\n        dueTime:\"5:00 PM\" ,\r\n        lobcolor:\"#707683\",\r\n        duecolor:\"rgba(95, 128, 185, 0.5)\",\r\n        duewidth:\"50%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Task Name\",\r\n        lob:\"Exchange\",\r\n        subtask:\"2\",\r\n        assignTo:\"\",\r\n        step:\"In Build\",\r\n        dueDate:\"09/18/2020\",\r\n        dueTime:\"10:30 AM\" ,\r\n        lobcolor:\"#F4AF64\",\r\n        duecolor:\"rgba(128, 196, 131, 0.5)\",\r\n        duewidth:\"20%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Task Name\",\r\n        lob:\"Medicaid\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"\",\r\n        dueTime:\"\" ,\r\n        lobcolor:\"#F89090\",\r\n        duecolor:\"white\",\r\n        duewidth:\"100%\"\r\n    },\r\n\r\n\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task001\",\r\n        lob:\"Medicare\",\r\n        subtask:\"4\",\r\n        assignTo:\"\",\r\n        step:\"In Build\",\r\n        dueDate:\"12/22/2020\",\r\n        dueTime:\"10:00 AM\",\r\n        lobcolor:\"purple\",\r\n        duecolor:\"rgba(244, 175, 100, 0.5)\",\r\n        duewidth:\"80%\"\r\n    \r\n    },\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task Default\",\r\n        lob:\"Commercial\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"12/12/2020\",\r\n        dueTime:\"10:00 AM\" ,\r\n        lobcolor:\"#707683\",\r\n        duecolor:\"rgba(95, 128, 185, 0.5)\",\r\n        duewidth:\"40%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Resale\",\r\n        lob:\"Exchange\",\r\n        subtask:\"6\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"12/14/2020\",\r\n        dueTime:\"10:00 AM\" ,\r\n        lobcolor:\"#F4AF64\",\r\n        duecolor:\"rgba(128, 196, 131, 0.5)\",\r\n        duewidth:\"60%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Medical\",\r\n        lob:\"Medicaid\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"\",\r\n        dueTime:\"\" ,\r\n        lobcolor:\"#F89090\",\r\n        duecolor:\"white\",\r\n        duewidth:\"100%\"\r\n    },\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task001\",\r\n        lob:\"Medicare\",\r\n        subtask:\"4\",\r\n        assignTo:\"\",\r\n        step:\"In Build\",\r\n        dueDate:\"12/22/2020\",\r\n        dueTime:\"10:00 AM\",\r\n        lobcolor:\"purple\",\r\n        duecolor:\"rgba(244, 175, 100, 0.5)\",\r\n        duewidth:\"80%\"\r\n    \r\n    },\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task Default\",\r\n        lob:\"Task456\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"12/12/2020\",\r\n        dueTime:\"10:00 AM\" ,\r\n        lobcolor:\"#707683\",\r\n        duecolor:\"rgba(95, 128, 185, 0.5)\",\r\n        duewidth:\"10%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Task007\",\r\n        lob:\"Exchange\",\r\n        subtask:\"6\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"12/14/2020\",\r\n        dueTime:\"10:00 AM\" ,\r\n        lobcolor:\"#F4AF64\",\r\n        duecolor:\"rgba(128, 196, 131, 0.5)\",\r\n        duewidth:\"40%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Task678\",\r\n        lob:\"Medicaid\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Build\",\r\n        dueDate:\"\",\r\n        dueTime:\"\" ,\r\n        lobcolor:\"#F89090\",\r\n        duecolor:\"white\",\r\n        duewidth:\"60%\"\r\n    },\r\n\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task001\",\r\n        lob:\"Medicare\",\r\n        subtask:\"4\",\r\n        assignTo:\"\",\r\n        step:\"In Build\",\r\n        dueDate:\"12/22/2020\",\r\n        dueTime:\"10:00 AM\",\r\n        lobcolor:\"purple\",\r\n        duecolor:\"rgba(244, 175, 100, 0.5)\",\r\n        duewidth:\"80%\"\r\n    \r\n    },\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task Default\",\r\n        lob:\"Task456\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"12/12/2020\",\r\n        dueTime:\"10:00 AM\" ,\r\n        lobcolor:\"#707683\",\r\n        duecolor:\"rgba(95, 128, 185, 0.5)\",\r\n        duewidth:\"10%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Task007\",\r\n        lob:\"Exchange\",\r\n        subtask:\"6\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"12/14/2020\",\r\n        dueTime:\"10:00 AM\" ,\r\n        lobcolor:\"#F4AF64\",\r\n        duecolor:\"rgba(128, 196, 131, 0.5)\",\r\n        duewidth:\"40%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Task678\",\r\n        lob:\"Medicaid\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Build\",\r\n        dueDate:\"\",\r\n        dueTime:\"\" ,\r\n        lobcolor:\"#F89090\",\r\n        duecolor:\"white\",\r\n        duewidth:\"60%\"\r\n    },\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task001\",\r\n        lob:\"Medicare\",\r\n        subtask:\"7\",\r\n        assignTo:\"\",\r\n        step:\"In Build\",\r\n        dueDate:\"12/22/2020\",\r\n        dueTime:\"10:00 AM\",\r\n        lobcolor:\"purple\",\r\n        duecolor:\"rgba(244, 175, 100, 0.5)\",\r\n        duewidth:\"80%\"\r\n    \r\n    },\r\n    {\r\n        isChecked: false,\r\n        taskName: \"Task Default\",\r\n        lob:\"Task456\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"12/12/2020\",\r\n        dueTime:\"10:00 AM\" ,\r\n        lobcolor:\"#707683\",\r\n        duecolor:\"rgba(95, 128, 185, 0.5)\",\r\n        duewidth:\"10%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Task007\",\r\n        lob:\"Exchange\",\r\n        subtask:\"10\",\r\n        assignTo:\"\",\r\n        step:\"In Review\",\r\n        dueDate:\"12/14/2020\",\r\n        dueTime:\"10:00 AM\" ,\r\n        lobcolor:\"#F4AF64\",\r\n        duecolor:\"rgba(128, 196, 131, 0.5)\",\r\n        duewidth:\"40%\"\r\n    },{\r\n        isChecked: false,\r\n        taskName: \"Task678\",\r\n        lob:\"Medicaid\",\r\n        subtask:\"\",\r\n        assignTo:\"\",\r\n        step:\"In Build\",\r\n        dueDate:\"12/06/2020\",\r\n        dueTime:\"9:00 PM\" ,\r\n        lobcolor:\"#F89090\",\r\n        duecolor:\"white\",\r\n        duewidth:\"60%\"\r\n    },\r\n    \r\n    \r\n\r\n    \r\n]","\r\nimport React, { Component } from 'react'\r\nimport PaginationHeader from '../../Component/Pagination/PaginationHeader';\r\nimport Table from '../../Component/Table/Table';\r\nimport {data} from './Data'\r\n\r\nexport class DataTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            totalItems:data.length,\r\n            currentPage:1,\r\n            itemPerPage:5,\r\n            dataToShow:data.slice(0,5)\r\n            \r\n        }\r\n  \r\n       \r\n    }\r\n\r\n    onPageChange=(i)=>{\r\n        this.onDataChange(i,this.state.itemPerPage)\r\n           this.setState({currentPage:i})\r\n    }\r\n\r\n    onArrowChange=(change)=>{\r\n        let totalPages=Math.ceil(this.state.totalItems / this.state.itemPerPage)\r\n        if(change==\"first\"){\r\n            this.onDataChange(1,this.state.itemPerPage)\r\n            this.setState({currentPage:1 })\r\n        }\r\n        if(change==\"prev\"&&this.state.currentPage>1){\r\n            this.onDataChange(this.state.currentPage-1,this.state.itemPerPage)\r\n            this.setState({currentPage:this.state.currentPage-1 })\r\n        }\r\n        if(change==\"next\"&& this.state.currentPage<totalPages){\r\n            this.onDataChange(this.state.currentPage+1,this.state.itemPerPage)\r\n            this.setState({currentPage:this.state.currentPage+1 })\r\n        }\r\n        if(change==\"last\"){\r\n            let lastindex=Math.ceil(this.state.totalItems / this.state.itemPerPage)\r\n            this.onDataChange(lastindex,this.state.itemPerPage)\r\n            this.setState({currentPage: lastindex})\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    ondropdownChange=(item)=>{\r\n        this.onDataChange(1,item)\r\n        this.setState({itemPerPage:item,currentPage:1})\r\n    }\r\n\r\n    onInputChange=(current)=>{\r\n       \r\n        let totalPages=Math.ceil(this.state.totalItems / this.state.itemPerPage)\r\n        console.log(current);\r\n        if(current<=totalPages &&current>0){\r\n            console.log(\"sahista\"+current);\r\n            this.onDataChange(current,this.state.itemPerPage)\r\n            this.setState({currentPage:current})\r\n        }\r\n            \r\n    }\r\n\r\n    onDataChange = (currpage, itemperpage)=>{\r\n\r\n        let startindex= (currpage-1)* itemperpage;\r\n        let endIndex= (currpage-1)* itemperpage +  itemperpage;\r\n        let sliceData= data.slice(startindex,endIndex);\r\n        this.setState({dataToShow: sliceData});\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.dataToShow)\r\n        return (\r\n            <div>\r\n               <PaginationHeader \r\n                    totalItems={this.state.totalItems}\r\n                    currentPage={this.state.currentPage}\r\n                    itemPerPage={this.state.itemPerPage}\r\n                    onPageChange={this.onPageChange}\r\n                    onArrowChange={this.onArrowChange}\r\n                    ondropdownChange={this.ondropdownChange}\r\n                    onInputChange={this.onInputChange}\r\n                    \r\n                    \r\n                />\r\n                <Table itemsPerPage={this.state.itemPerPage} data={this.state.dataToShow}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataTable\r\n","import './App.css';\nimport Header from './Component/Header/Header';\nimport PaginationHeader from './Component/Pagination/PaginationHeader';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DataTable from './Container/DataTable/DataTable';\nimport Table from './Component/Table/Table';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <div className=\"tableBG\">\n        <DataTable />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n<link\n  rel=\"stylesheet\"\n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.3/css/bootstrap.min.css\"\n  integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\"\n  crossorigin=\"anonymous\"\n/>\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}